#pragma once

#include "MoniEditDlg.h"
// CMonitorDlg dialog

class CMonitorDlg : public CUiDlg
{
	#define TIMER_PERF_MONITOR		1
	typedef enum _VGA_MON_BTN_ID
	{
		BTN_MON_UP,
		BTN_MON_DOWN,
		BTN_MON_EDIT,
		BTN_MON_NUM
	};
	typedef enum VGA_MONI_STC_ID
	{
		MONI_STC_BG, MONI_STC_SCROLL, 
		MONI_STC_GPUCLK, MONI_STC_MEMCLK, MONI_STC_GPUVOL, 
		MONI_STC_MEMVOL, MONI_STC_FANSPD,MONI_STC_FANSPD_RPM ,MONI_STC_TEMPER,
		MONI_STC_POWER,  MONI_STC_GPUSAGE,  MONI_STC_CPUSAGE, 
		MONI_STC_CPUCLK, MONI_STC_MEMUSAGE, MONI_STC_PAGEUSAGE,

		MONI_STC_MINGPUCLK, MONI_STC_MINMEMCLK, MONI_STC_MINGPUVOL, 
		MONI_STC_MINMEMVOL, MONI_STC_MINFANSPD, MONI_STC_MINFANSPD_RPM, MONI_STC_MINTEMPER,
		MONI_STC_MINPOWER,  MONI_STC_MINGPUSAGE,  MONI_STC_MINCPUSAGE, 
		MONI_STC_MINCPUCLK, MONI_STC_MINMEMUSAGE, MONI_STC_MINPAGEUSAGE,

		MONI_STC_MAXGPUCLK, MONI_STC_MAXMEMCLK, MONI_STC_MAXGPUVOL, 
		MONI_STC_MAXMEMVOL, MONI_STC_MAXFANSPD ,MONI_STC_MAXFANSPD_RPM, MONI_STC_MAXTEMPER,
		MONI_STC_MAXPOWER,  MONI_STC_MAXGPUSAGE,  MONI_STC_MAXCPUSAGE, 
		MONI_STC_MAXCPUCLK, MONI_STC_MAXMEMUSAGE, MONI_STC_MAXPAGEUSAGE,

		MONI_STC_BLKGPUCLK, MONI_STC_BLKMEMCLK, MONI_STC_BLKGPUVOL, 
		MONI_STC_BLKMEMVOL, MONI_STC_BLKFANSPD, MONI_STC_BLKFANSPD_RPM, MONI_STC_BLKTEMPER,
		MONI_STC_BLKPOWER,  MONI_STC_BLKGPUSAGE,MONI_STC_BLKCPUSAGE,
		MONI_STC_BLKCPUCLK, MONI_STC_BLKMEMUSAGE, MONI_STC_BLKPAGEUSAGE,

		MONI_STC_TITGPUCLK, MONI_STC_TITMEMCLK, MONI_STC_TITGPUVOL, 
		MONI_STC_TITMEMVOL, MONI_STC_TITFANSPD,MONI_STC_TITFANSPD_RPM,MONI_STC_TITTEMPER,
		MONI_STC_TITPOWER,  MONI_STC_TITGPUSAGE,  MONI_STC_TITCPUSAGE, 
		MONI_STC_TITCPUCLK, MONI_STC_TITMEMUSAGE, MONI_STC_TITPAGEUSAGE,

		MONI_STC_UNITGPUCLK, MONI_STC_UNITMEMCLK, MONI_STC_UNITGPUVOL, 
		MONI_STC_UNITMEMVOL, MONI_STC_UNITFANSPD, MONI_STC_UNITFANSPDRPM, MONI_STC_UNITTEMPER,
		MONI_STC_UNITPOWER,  MONI_STC_UNITGPUSAGE,  MONI_STC_UNITCPUSAGE, 
		MONI_STC_UNITCPUCLK, MONI_STC_UNITMEMUSAGE, MONI_STC_UNITPAGEUSAGE,

		MONI_STC_RMINGCLK,  MONI_STC_RMINMCLK, MONI_STC_RMINGVOL, 
		MONI_STC_RMINMVOL,  MONI_STC_RMINFANS, MONI_STC_RMINFANR, MONI_STC_RMINTEMP,
		MONI_STC_RMINPOWER, MONI_STC_RMINGUSAGE, MONI_STC_RMINCUSAGE, 
		MONI_STC_RMINCCLK,  MONI_STC_RMINMUSAGE, MONI_STC_RMINPUSAGE,

		MONI_STC_RMAXGCLK,  MONI_STC_RMAXMCLK, MONI_STC_RMAXGVOL, 
		MONI_STC_RMAXMVOL,  MONI_STC_RMAXFANS, MONI_STC_RMAXFANR, MONI_STC_RMAXTEMP,
		MONI_STC_RMAXPOWER, MONI_STC_RMAXGUSAGE, MONI_STC_RMAXCUSAGE, 
		MONI_STC_RMAXCCLK,  MONI_STC_RMAXMUSAGE, MONI_STC_RMAXPUSAGE,

		MONI_STC_NUM,

	};
	typedef enum VGA_MONI_PANEL_ID
	{
		MONI_PAN_LOG = 0,
		MONI_PAN_NUM,

	};
	typedef enum VGA_MONI_STSGRAPH_ID
	{
		MONI_GPH_GPUCLK = 0, MONI_GPH_MEMCLK, MONI_GPH_GPUVOL, 
		MONI_GPH_MEMVOL, MONI_GPH_FANSPD,MONI_GPH_FANSPD_RPM, MONI_GPH_TEMPER,
		MONI_GPH_POWER, MONI_GPH_GPUSAGE, MONI_GPH_CPUSAGE, MONI_GPH_CPUCLK, 
		MONI_GPH_MEMUSAGE, MONI_GPH_PAGEUSAGE,
		MONI_GPH_NUM,
	} ;
   typedef enum VGA_MONI_SLD_ID
   {
	    SLD_MON_SCROLL = 0,
		SLD_MON_NUM
   };
	DECLARE_DYNAMIC(CMonitorDlg)

public:
	CMonitorDlg(CWnd* pParent = NULL);   // standard constructor
	virtual ~CMonitorDlg();

// Dialog Data
	enum { IDD = IDD_VGA_MONITORING };

protected:

	HICON  m_hIcon;

	virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV support
	virtual BOOL OnInitDialog();

	afx_msg LRESULT OnNcHitTest(CPoint point);
	afx_msg HCURSOR OnQueryDragIcon();

	afx_msg void OnPaint();
	afx_msg void OnTimer(UINT_PTR nIDEvent);
	afx_msg void OnSize(UINT nType, int cx, int cy);

	afx_msg void OnActivate(UINT nState, CWnd* pWndOther, BOOL bMinimized);
	afx_msg void OnMoving(UINT fwSide, LPRECT pRect);
	afx_msg BOOL OnMouseWheel(UINT nFlags, short zDelta, CPoint pt);

	afx_msg LRESULT OnUiButtonClicked(WPARAM wParam, LPARAM lParam);
	afx_msg LRESULT OnUiSliderMoving(WPARAM wParam, LPARAM lParam);
	
	DECLARE_MESSAGE_MAP()

	void	Ui(void);
	void	UiMain(void);

	void	OnClose();
	void	OnMinimize();

public:
	void	InitPanel(int nIndex, int nPerfLogs[6][64]);
	void	ResetScroll(int cy);
	void	SetParent(CUiDlg* pParent);
	void	OnDepart();
	void    OnFit(CRect rc);
	int		MoveMoniotr(BOOL bMove = FALSE);
	void    ResetPowerBtn();
	void	InitState();


	CUiDlg* m_pParent;
private:
	CMoniEditDlg m_EditDlg;

	void	Monitoring();

	//UINT	IDR_MAINFRAME;
	int		m_nScrollPos;    
	SIZE	m_szDialog;
	BOOL	m_bDragging;
	CPoint	m_ptDragPoint;
	bool	m_bMove;
	int		m_nMonitorCount;

	CUiDlg	m_MonDlg;
	CUiButton m_btn[BTN_MON_NUM];
	CUiStatic m_stc[MONI_STC_NUM];
	CUiPanelCtrl m_panel[MONI_PAN_NUM];
	CUiStatusGraphCtrl m_statusGraph[MONI_GPH_NUM];
	CUiSliderCtrl	m_slider;
	int  m_nPerfLogs[6][64];
	int nMaxValue[MONI_GPH_NUM];
	int nMinValue[MONI_GPH_NUM];
	BOOL m_bLOG;
	int  m_nIndex;

};
