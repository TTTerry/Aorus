#pragma once


#define LANG_EN_US	0	// English
#define LANG_ZH_CN	1	// Chinese
#define LANG_ZH_TW	2	// Traditional Chinese

// words
typedef struct _LANG_WORD
{
	int nKey;
	CString sEn;	// English
	CString sCn;	// Chinese
	CString sTw;	// Traditional Chinese

	_LANG_WORD() {
		nKey = 0; sEn = _T(""); sCn = _T(""); sTw = _T(""); 
	}
	_LANG_WORD(int key, CString cn, CString tw, CString en) {
		nKey = key; sCn = cn; sTw = tw; sEn = en;
	}

} LANG_WORD, *PLANG_WORD;

typedef enum _LANG_KEY
{
	#pragma region language keys

	// home
	LANG_AORUS_VGA = 0,
	LANG_AORUS_IXEB,
	LANG_AORUS_MOUSE,
	LANG_AORUS_KB,
	LANG_AORUS_HEADSET,
	LANG_AORUS_CASE,
	LANG_AORUS_MOTHERBOARD,
	LANG_AORUS_CPU_COOLER,
	LANG_AORUS_MOTHRBOARD,
	LANG_AORUS_SLI,
	LANG_AORUS_HOMETIP,
	LANG_AORUS_MONITIP,
	LANG_AORUS_FANSTOPTIP,
	LANG_AORUS_LEDTIP,
	LANG_AORUS_KEYASSIGNTIP,
	LANG_AORUS_PROFTIP,
	LANG_AORUS_ALLCARD,
	LANG_AORUS_MACRO,
	LANG_AORUS_POINTER,
	LANG_AORUS_BUTTONS,
    //oc
	LANG_VGAOC_GPUCLK,
	LANG_VGAOC_MEMCLK,
	LANG_VGAOC_AMDCLK,
	//vga led
	LANG_VGALED_LEDCAPTION,
	LANG_VGALED_LEDEFFECTS,
	LANG_VGALED_STYLE,
	LANG_VGALED_SPEED,
	LANG_VGALED_VARIATION,
	LANG_VGALED_BRIGHTNESS,
	LANG_VGALED_SYNCLEDDEV,
	LANG_VGALED_DEFAULT,
	LANG_VGALED_APPLY,

    LANG_VGALED_VGASTYLE_CONSI,
	LANG_VGALED_VGASTYLE_BREATH,
	LANG_VGALED_VGASTYLE_FLASH,
	LANG_VGALED_VGASTYLE_DUALFLASH,
	LANG_VGALED_VGASTYLE_VARIA,
	LANG_VGALED_VGASTYLE_AUDIOFLASH,
	LANG_VGALED_VGASTYLE_RANDOM,

	LANG_VGALED_VGAVARIA_STYLEBASE,
	LANG_VGALED_VGAVARIA_GPUTEMP,
	LANG_VGALED_VGAVARIA_GPUUTI,
	LANG_VGALED_VGAVARIA_GPUCLK,
	LANG_VGALED_VGAVARIA_GPUVOL,
	LANG_VGALED_VGAVARIA_GPUFANSPD,

    LANG_VGALED_MBSTYLE_CONS,
	LANG_VGALED_MBSTYLE_BREATHING,
	LANG_VGALED_MBSTYLE_FLASHING,
	LANG_VGALED_MBSTYLE_VARIATION,
	LANG_VGALED_MBSTYLE_AUDIOFLASHING,
	LANG_VGALED_MBSTYLE_WAVE,
	LANG_VGALED_MBSTYLE_RANDOM,

	LANG_VGALED_MBVARIA_CPUUTI,
	LANG_VGALED_MVSTYLE_CPUTEMP,
	LANG_VGALED_MVSTYLE_SYSTEMP,
	LANG_VGALED_MVSTYLE_CPUFANSPD,

	LANG_VGALED_SYCSTYLE_CONS,
	LANG_VGALED_SYCSTYLE_BREATHING,
	LANG_VGALED_SYCSTYLE_RANDOM,
	LANG_VGALED_SYCSTYLE_AUDIOFLASHING,
	LANG_VGALED_SYCSTYLE_FLASHING,
	LANG_VGALED_SYCSTYLE_GPUCPUUSG,

    //vga pro
	LANG_VGAPRO_PROFILE,
	LANG_VGAPRO_APPLY,
	LANG_VGAPRO_RESET,
	LANG_VGAPRO_DEFAULT,
	LANG_VGAPRO_GPUBOOSTCLK,
	LANG_VGAPRO_GPUAMDCLK,
	LANG_VGAPRO_MEMCLK,
	LANG_VGAPRO_GPUVOL,
	LANG_VGAPRO_FANSPD,
	LANG_VGAPRO_PWRTAR,
	LANG_VGAPRO_TARTEMP,
	LANG_VGAPRO_GPUCUSTOM,
	LANG_VGAPRO_FANAUTO,
	LANG_VGAPRO_FANMANUAL,
	LANG_VGAPRO_FANCUSTOM,

	//CUSTOMIZED
	LANG_VGACUST_CAP,
	LANG_VGACUST_CLK,
	LANG_VGACUST_VOL,
	LANG_VGACUST_FANSPD,
	LANG_VGACUST_FANTEMP,
	LANG_VGACUST_ACTOCSCANER,
	LANG_VGACUST_STOPOCSCANER,

	//MONI
	LANG_MONI_EDIT,
	LANG_MONI_GPUCLK,
	LANG_MONI_MEMCLK,
	LANG_MONI_GPUVOL,
	LANG_MONI_MEMVOL,
	LANG_MONI_FANSPD,
	LANG_MONI_GPUTEMP,
	LANG_MONI_PWRCONS,
	LANG_MONI_GPUUSG,
	LANG_MONI_CPUUSG,
	LANG_MONI_CPUCLK,
	LANG_MONI_MEMUSG,
	LANG_MONI_PGFILEUSG,

	//MONI EDIT
	LANG_MONIEDIT_CAPTION,
	LANG_MONIEDT_ALL,
	LANG_MONIEDT_PWERTAR,
	LANG_MONIEDT_CPUUSG,
	LANG_MONIEDT_GPUCLK,
	LANG_MONIEDT_GPUVOL,
	LANG_MONIEDT_GPUUSG,
	LANG_MONIEDT_GPUTEMP,
	LANG_MONIEDT_GPUFANSPD_PERCENT,
	LANG_MONIEDT_GPUFANSPD_RPM,
	LANG_MONIEDT_VRAMCLK,
	LANG_MONIEDT_VRAMUSG,

	LANG_MONIEDT_HAR_POLL_PER,
	LANG_MONIEDT_INMILLISECOND,
	LANG_MONIEDT_LOGHISTORY_TO_FILE,
	LANG_MONIEDT_APPLY,
	
	//SETTING
    LANG_SET_CAPTION,
    LANG_SET_GENERAL,
	LANG_SET_VGA,
	LANG_SET_START_WITH_WINDOW,
	LANG_SET_START_MIN,
	LANG_SET_CLOSEBTN_TO_TRAY,
	LANG_SET_AUTOCHECK_FOR_UPDATE,
	LANG_SET_CHECK_FOR_UPDATE,
	LANG_SET_LAST_CHECK_ON,
	LANG_SET_OK,
	LANG_SET_CANCEL,
	LANG_SET_BIOS_VER,
	LANG_SET_DRI_VER,

	//REMOTE CTRL SETTING
	LANG_REMOTE_CAPTION,
	LANG_REMOTE_NAME,
	LANG_REMOTE_PASSWORD,
	LANG_REMOTE_APPLY,
	LANG_REMOTE_CANCEL,
	
	LANG_FONT,
	LANG_CONTACT,

	#pragma endregion

} LANG_KEY;


class CLangX
{
public:
 	 CLangX(void);
	~CLangX(void);
	static CString Get(int nKey);
	static CString Get(CArray<LANG_WORD> arrWordsUserDefined, int nKey);
	static CString Get(LANG_WORD arrWordsUserDefined[], int nWordsCnt, int nKey);

private:
	static int m_nLangCur;
};